common_deploy_setup: &common_deploy_setup
  working_directory: ~/mdai-client-py
  docker:
    - image: circleci/python:3.7.3

step_restore_cache: &step_restore_cache
  restore_cache:
    keys:
      - v1-{{ checksum "poetry.lock" }}
    paths:
      - ".venv"

step_install_dependencies: &step_install_dependencies
  run:
    name: Install dependencies
    command: |
      sudo pip install -U poetry
      poetry config virtualenvs.create true
      poetry config virtualenvs.in-project true
      poetry install

step_save_cache: &step_save_cache
  save_cache:
    key: v1-{{ checksum "poetry.lock" }}
    paths:
      - ".venv"

run_tests: &run_tests
  run:
    name: Run tests
    command: |
      poetry run pytest

version: 2
jobs:
  test:
    <<: *common_deploy_setup
    resource_class: small
    steps:
      - checkout
      - <<: *step_restore_cache
      - <<: *step_install_dependencies
      - <<: *step_save_cache
      - <<: *run_tests

  test_and_release:
    <<: *common_deploy_setup
    resource_class: small
    steps:
      - checkout
      - <<: *step_restore_cache
      - <<: *step_install_dependencies
      - <<: *step_save_cache
      - <<: *run_tests
      - run:
          name: Release
          command: |
            echo $PYPIRC_CONTENTS | base64 --decode > ~/.pypirc
            poetry run pip install twine wheel
            poetry run python setup.py sdist bdist_wheel
            poetry run twine upload dist/*

workflows:
  version: 2
  deploy:
    jobs:
      - test:
          filters:
            branches:
              only: master
      - test_and_release:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
